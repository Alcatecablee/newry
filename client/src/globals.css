@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-rgb: 0, 0, 0;
  --glow-syntax: rgba(255, 255, 255, 0.1);
  --glow-pattern: rgba(255, 255, 255, 0.1);
  --glow-component: rgba(255, 255, 255, 0.1);
  --glow-data: rgba(255, 255, 255, 0.1);
  --glow-framework: rgba(255, 255, 255, 0.1);
  --glow-testing: rgba(255, 255, 255, 0.1);
}

body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
  min-height: 100vh;
  font-family: 'Inter', sans-serif;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #000;
}

::-webkit-scrollbar-thumb {
  background: #333;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #444;
}

/* Global button styles */
.btn {
  @apply px-4 py-2 rounded-xl font-medium transition-all duration-300;
}

.btn-primary {
  @apply bg-black text-white border border-zinc-800 hover:bg-white hover:text-black;
}

.btn-secondary {
  @apply bg-zinc-900 text-white border border-zinc-800 hover:bg-white hover:text-black;
}

/* Card styles */
.card {
  @apply bg-black border border-zinc-800 rounded-xl p-6;
}

/* Table styles */
.table-container {
  @apply bg-black border border-zinc-800 rounded-xl overflow-hidden;
}

.table-header {
  @apply bg-black text-xs font-medium text-gray-400 uppercase tracking-wider;
}

/* Input styles */
.input {
  @apply bg-black border border-zinc-800 rounded-xl px-4 py-2 text-white focus:outline-none focus:border-zinc-700;
}

/* Feature Card Glow Effects */
.feature-card {
  position: relative;
  border-radius: 1rem;
  background: #111;
  padding: 2rem;
  transition: all 0.3s ease;
}

.feature-card::before {
  content: '';
  position: absolute;
  inset: -1px;
  border-radius: inherit;
  padding: 1px;
  background: transparent;
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

/* Syntax Analysis Card */
.syntax-card::before {
  background: radial-gradient(500px circle at var(--mouse-x) var(--mouse-y), var(--glow-syntax), transparent 40%);
  opacity: 0;
  animation: cardGlow 4s infinite;
  animation-delay: calc(random(5) + 5s);
}

/* Pattern Detection Card */
.pattern-card::before {
  background: radial-gradient(500px circle at var(--mouse-x) var(--mouse-y), var(--glow-pattern), transparent 40%);
  opacity: 0;
  animation: cardGlow 5s infinite;
  animation-delay: calc(random(8) + 8s);
}

/* Component Analysis Card */
.component-card::before {
  background: radial-gradient(500px circle at var(--mouse-x) var(--mouse-y), var(--glow-component), transparent 40%);
  opacity: 0;
  animation: cardGlow 6s infinite;
  animation-delay: calc(random(10) + 10s);
}

/* Data Flow Card */
.data-card::before {
  background: radial-gradient(500px circle at var(--mouse-x) var(--mouse-y), var(--glow-data), transparent 40%);
  opacity: 0;
  animation: cardGlow 4s infinite;
  animation-delay: calc(random(5) + 5s);
}

/* Framework Card */
.framework-card::before {
  background: radial-gradient(500px circle at var(--mouse-x) var(--mouse-y), var(--glow-framework), transparent 40%);
  opacity: 0;
  animation: cardGlow 5s infinite;
  animation-delay: calc(random(8) + 8s);
}

/* Testing Card */
.testing-card::before {
  background: radial-gradient(500px circle at var(--mouse-x) var(--mouse-y), var(--glow-testing), transparent 40%);
  opacity: 0;
  animation: cardGlow 6s infinite;
  animation-delay: calc(random(10) + 10s);
}

@keyframes cardGlow {
  0% { opacity: 0; }
  50% { opacity: 1; }
  100% { opacity: 0; }
}

/* Random Animation Delays */
.random-delay-short {
  animation-delay: calc(random(10) + 5s) !important;
}

.random-delay-medium {
  animation-delay: calc(random(12) + 8s) !important;
}

.random-delay-long {
  animation-delay: calc(random(15) + 10s) !important;
}

/* Random Animation Durations */
.random-duration-short {
  animation-duration: calc(random(3) + 3s) !important;
}

.random-duration-medium {
  animation-duration: calc(random(3) + 4s) !important;
}

.random-duration-long {
  animation-duration: calc(random(4) + 4s) !important;
} 