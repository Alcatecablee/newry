@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-rgb: 0, 0, 0;
  --glow-syntax: rgba(255, 255, 255, 0.1);
  --glow-pattern: rgba(255, 255, 255, 0.1);
  --glow-component: rgba(255, 255, 255, 0.1);
  --glow-data: rgba(255, 255, 255, 0.1);
  --glow-framework: rgba(255, 255, 255, 0.1);
  --glow-testing: rgba(255, 255, 255, 0.1);
}

body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
  min-height: 100vh;
  font-family: "Inter", sans-serif;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Enhanced animations */
@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse-glow {
  0%,
  100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.02);
  }
}

/* Animation utilities */
.animate-slide-in-down {
  animation: slideInDown 0.3s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 0.3s ease-out forwards;
}

.animate-fade-in-scale {
  animation: fadeInScale 0.3s ease-out forwards;
}

.animate-pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite;
}

/* Reduce motion for accessibility */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  html {
    scroll-behavior: auto;
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #000;
}

::-webkit-scrollbar-thumb {
  background: #333;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #444;
}

/* Enhanced focus indicators */
*:focus-visible {
  outline: 2px solid rgb(113 113 122);
  outline-offset: 2px;
  border-radius: 4px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .card {
    border-width: 2px;
  }

  button:focus,
  a:focus,
  input:focus,
  textarea:focus,
  select:focus {
    outline: 3px solid currentColor;
    outline-offset: 2px;
  }
}

/* Touch target sizing for mobile */
@media (pointer: coarse) {
  button,
  .btn,
  [role="button"],
  input[type="submit"],
  input[type="button"] {
    min-height: 44px;
    min-width: 44px;
  }

  a {
    min-height: 44px;
    display: inline-flex;
    align-items: center;
  }
}

/* Global button styles */
.btn {
  @apply px-4 py-2 rounded-xl font-medium transition-all duration-300 ease-out;
}

.btn-primary {
  @apply bg-black text-white border border-zinc-800 hover:bg-white hover:text-black transform hover:scale-105 active:scale-95;
}

.btn-secondary {
  @apply bg-zinc-900 text-white border border-zinc-800 hover:bg-white hover:text-black transform hover:scale-105 active:scale-95;
}

/* Card styles */
.card {
  @apply bg-black border border-zinc-800 rounded-xl p-6;
}

/* Table styles */
.table-container {
  @apply bg-black border border-zinc-800 rounded-xl overflow-hidden;
}

.table-header {
  @apply bg-black text-xs font-medium text-gray-400 uppercase tracking-wider;
}

/* Input styles */
.input {
  @apply bg-black border border-zinc-800 rounded-xl px-4 py-2 text-white focus:outline-none focus:border-zinc-700 transition-all duration-300 ease-out hover:border-zinc-600 focus:ring-2 focus:ring-zinc-500 focus:ring-offset-2 focus:ring-offset-black;
}

/* Loading states */
.loading-skeleton {
  @apply bg-zinc-800/50 animate-pulse rounded;
}

.loading-spinner {
  @apply border-2 border-current border-t-transparent rounded-full animate-spin;
}

/* Interactive elements */
.interactive {
  @apply transition-all duration-300 ease-out transform hover:scale-105 active:scale-95;
}

.interactive-subtle {
  @apply transition-all duration-300 ease-out transform hover:scale-102 active:scale-98;
}

/* Glass morphism effect */
.glass {
  @apply backdrop-blur-xl bg-black/80 border border-zinc-800/50;
}

.glass-light {
  @apply backdrop-blur-xl bg-white/10 border border-white/20;
}

/* Smooth state transitions */
.state-transition {
  @apply transition-all duration-300 ease-out;
}

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Feature Card Glow Effects */
.feature-card {
  position: relative;
  border-radius: 1rem;
  background: #111;
  padding: 2rem;
  transition: all 0.3s ease;
}

.feature-card::before {
  content: "";
  position: absolute;
  inset: -1px;
  border-radius: inherit;
  padding: 1px;
  background: transparent;
  -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

/* Syntax Analysis Card */
.syntax-card::before {
  background: transparent;
  opacity: 0;
}

/* Pattern Detection Card */
.pattern-card::before {
  background: transparent;
  opacity: 0;
}

/* Component Analysis Card */
.component-card::before {
  background: transparent;
  opacity: 0;
}

/* Data Flow Card */
.data-card::before {
  background: transparent;
  opacity: 0;
}

/* Framework Card */
.framework-card::before {
  background: transparent;
  opacity: 0;
}

/* Testing Card */
.testing-card::before {
  background: transparent;
  opacity: 0;
}

@keyframes cardGlow {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Random Animation Delays */
.random-delay-short {
  animation-delay: calc(random(10) + 5s) !important;
}

.random-delay-medium {
  animation-delay: calc(random(12) + 8s) !important;
}

.random-delay-long {
  animation-delay: calc(random(15) + 10s) !important;
}

/* Random Animation Durations */
.random-duration-short {
  animation-duration: calc(random(3) + 3s) !important;
}

.random-duration-medium {
  animation-duration: calc(random(3) + 4s) !important;
}

.random-duration-long {
  animation-duration: calc(random(4) + 4s) !important;
}
