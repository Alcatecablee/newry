{
  "name": "neurolint-vscode",
  "displayName": "NeuroLint",
  "description": "Advanced rule-based code analysis and transformation for VS Code with AI-ready architecture",
  "version": "1.0.0",
  "publisher": "neurolint",
  "icon": "media/icon.png",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Linters",
    "Formatters",
    "Programming Languages"
  ],
  "keywords": [
    "typescript",
    "javascript",
    "react",
    "nextjs",
    "linting",
    "rule-based",
    "code analysis",
    "transformation",
    "enterprise"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:typescriptreact",
    "onLanguage:javascriptreact"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "typescript",
        "extensions": [
          ".ts",
          ".tsx"
        ]
      },
      {
        "id": "javascript",
        "extensions": [
          ".js",
          ".jsx"
        ]
      }
    ],
    "commands": [
      {
        "command": "neurolint.analyzeFile",
        "title": "Analyze Current File",
        "category": "NeuroLint",
        "icon": "$(search)"
      },
      {
        "command": "neurolint.analyzeWorkspace",
        "title": "Analyze Entire Workspace",
        "category": "NeuroLint",
        "icon": "$(folder)"
      },
      {
        "command": "neurolint.fixFile",
        "title": "Fix Current File",
        "category": "NeuroLint",
        "icon": "$(tools)"
      },
      {
        "command": "neurolint.fixWorkspace",
        "title": "Fix Entire Workspace",
        "category": "NeuroLint",
        "icon": "$(wrench)"
      },
      {
        "command": "neurolint.showOutput",
        "title": "Show Output Panel",
        "category": "NeuroLint"
      },
      {
        "command": "neurolint.configure",
        "title": "Configure NeuroLint",
        "category": "NeuroLint",
        "icon": "$(gear)"
      },
      {
        "command": "neurolint.login",
        "title": "Login to NeuroLint",
        "category": "NeuroLint"
      },
      {
        "command": "neurolint.enterprise.dashboard",
        "title": "Open Enterprise Dashboard",
        "category": "NeuroLint Enterprise"
      },
      {
        "command": "neurolint.enterprise.analytics",
        "title": "View Analytics",
        "category": "NeuroLint Enterprise"
      },
      {
        "command": "neurolint.enterprise.team",
        "title": "Manage Team",
        "category": "NeuroLint Enterprise"
      },
      {
        "command": "neurolint.enterprise.compliance",
        "title": "Compliance Report",
        "category": "NeuroLint Enterprise"
      },
      {
        "command": "neurolint.enterprise.audit",
        "title": "Audit Trail",
        "category": "NeuroLint Enterprise"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorLangId =~ /^(typescript|javascript|typescriptreact|javascriptreact)$/",
          "command": "neurolint.analyzeFile",
          "group": "1_modification@1"
        },
        {
          "when": "editorLangId =~ /^(typescript|javascript|typescriptreact|javascriptreact)$/",
          "command": "neurolint.fixFile",
          "group": "1_modification@2"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceExtname =~ /^\\.(ts|tsx|js|jsx)$/",
          "command": "neurolint.analyzeFile",
          "group": "7_modification@1"
        },
        {
          "when": "resourceExtname =~ /^\\.(ts|tsx|js|jsx)$/",
          "command": "neurolint.fixFile",
          "group": "7_modification@2"
        }
      ],
      "commandPalette": [
        {
          "command": "neurolint.analyzeFile",
          "when": "editorLangId =~ /^(typescript|javascript|typescriptreact|javascriptreact)$/"
        },
        {
          "command": "neurolint.fixFile",
          "when": "editorLangId =~ /^(typescript|javascript|typescriptreact|javascriptreact)$/"
        },
        {
          "command": "neurolint.enterprise.dashboard",
          "when": "config.neurolint.enterpriseFeatures.enabled"
        },
        {
          "command": "neurolint.enterprise.analytics",
          "when": "config.neurolint.enterpriseFeatures.enabled"
        },
        {
          "command": "neurolint.enterprise.team",
          "when": "config.neurolint.enterpriseFeatures.enabled"
        },
        {
          "command": "neurolint.enterprise.compliance",
          "when": "config.neurolint.enterpriseFeatures.complianceMode"
        },
        {
          "command": "neurolint.enterprise.audit",
          "when": "config.neurolint.enterpriseFeatures.auditLogging"
        }
      ]
    },
    "configuration": {
      "title": "NeuroLint",
      "properties": {
        "neurolint.apiUrl": {
          "type": "string",
          "default": "http://localhost:5000",
          "description": "NeuroLint API server URL"
        },
        "neurolint.apiKey": {
          "type": "string",
          "default": "",
          "description": "NeuroLint API key for authentication"
        },
        "neurolint.enabledLayers": {
          "type": "array",
          "items": {
            "type": "number",
            "minimum": 1,
            "maximum": 6
          },
          "default": [
            1,
            2,
            3,
            4
          ],
          "description": "Which NeuroLint layers to enable (1-6)"
        },
        "neurolint.autoFix": {
          "type": "boolean",
          "default": false,
          "description": "Automatically fix issues on save"
        },
        "neurolint.showInlineHints": {
          "type": "boolean",
          "default": true,
          "description": "Show inline code hints and suggestions"
        },
        "neurolint.diagnosticsLevel": {
          "type": "string",
          "enum": [
            "error",
            "warning",
            "info"
          ],
          "default": "warning",
          "description": "Diagnostic severity level"
        },
        "neurolint.timeout": {
          "type": "number",
          "default": 30000,
          "description": "Request timeout in milliseconds"
        },
        "neurolint.enterpriseFeatures.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable enterprise features"
        },
        "neurolint.enterpriseFeatures.teamId": {
          "type": "string",
          "default": "",
          "description": "Enterprise team ID"
        },
        "neurolint.enterpriseFeatures.ssoEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable Single Sign-On"
        },
        "neurolint.enterpriseFeatures.auditLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable audit logging for compliance"
        },
        "neurolint.enterpriseFeatures.complianceMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable compliance mode (SOC2, GDPR, ISO27001)"
        },
        "neurolint.workspace.excludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/build/**",
            "**/.next/**",
            "**/coverage/**"
          ],
          "description": "File patterns to exclude from analysis"
        },
        "neurolint.workspace.includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/*.ts",
            "**/*.tsx",
            "**/*.js",
            "**/*.jsx"
          ],
          "description": "File patterns to include in analysis"
        },
        "neurolint.workspace.maxFileSize": {
          "type": "number",
          "default": 10485760,
          "description": "Maximum file size to analyze (in bytes)"
        },
        "neurolint.workspace.maxFiles": {
          "type": "number",
          "default": 1000,
          "description": "Maximum number of files to analyze in workspace"
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "neurolintExplorer",
          "name": "NeuroLint",
          "when": "neurolint.enabled"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "neurolint",
          "title": "NeuroLint",
          "icon": "$(search)"
        }
      ]
    },
    "keybindings": [
      {
        "command": "neurolint.analyzeFile",
        "key": "ctrl+shift+l",
        "mac": "cmd+shift+l",
        "when": "editorTextFocus && editorLangId =~ /^(typescript|javascript|typescriptreact|javascriptreact)$/"
      },
      {
        "command": "neurolint.fixFile",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "editorTextFocus && editorLangId =~ /^(typescript|javascript|typescriptreact|javascriptreact)$/"
      },
      {
        "command": "neurolint.analyzeWorkspace",
        "key": "ctrl+shift+w",
        "mac": "cmd+shift+w"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./dist/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "@vscode/test-electron": "^2.2.0",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "ws": "^8.14.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/neurolint/neurolint-vscode.git"
  },
  "bugs": {
    "url": "https://github.com/neurolint/neurolint-vscode/issues"
  },
  "homepage": "https://github.com/neurolint/neurolint-vscode#readme"
}
